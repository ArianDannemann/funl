funl
====

Silly experimental language where absolutely everything is a function. I developed this idea while talking to a coworker about how great the idea of tcl is - to build a complex language from incredibly simple rules. So, I decided to try the same as a prototype and here are some ideas I came up with:

- Everything is either a function declaration or a function call
- Syntax should be as minimal as possible, if you know how to call a function you know pretty much everything about funl
- Strongly typed variables - because this helps with preventing errors
- Interpreted (because that was easiest)

TODO
----

(there are more todos within the code, this is the only acceptable way to
manage open issues)

Ranked in order of priority;

- add function definitions using code blocks
	- implement stack pointer
	- implement saving function code under specified name
	- implement local environments?
	- implement executing single statements based on line
- the ability to load from a file
- unit tests?
- comment coverage
- add project structure
- add pylint (and pep8?)
